{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/kjoro/Documents/Code Projects/tutorial_reactjs/src/components/AddTodo.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class AddTodo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //this is a component state\n      title: ''\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); //prevent reload of page\n\n      this.props.addTodo(this.state.title); //send input up to app\n\n      this.setState({\n        title: ''\n      }); //reset state for next input\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        display: 'flex'\n      },\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Add Todo ...\",\n      style: {\n        flex: '10',\n        padding: '5px'\n      },\n      value: this.state.title //onchange update state\n      ,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn\",\n      style: {\n        flex: '1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\nexport default AddTodo;","map":{"version":3,"sources":["/mnt/c/Users/kjoro/Documents/Code Projects/tutorial_reactjs/src/components/AddTodo.js"],"names":["React","Component","PropTypes","AddTodo","state","title","onSubmit","e","preventDefault","props","addTodo","setState","onChange","target","name","value","render","display","flex","padding","propTypes","func","isRequired","markComplete","delTodo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SACtCG,KADsC,GAC9B;AACP;AACAC,MAAAA,KAAK,EAAE;AAFA,KAD8B;;AAAA,SAMtCC,QANsC,GAM1BC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF,GADiB,CACG;;AACpB,WAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKN,KAAL,CAAWC,KAA9B,EAFiB,CAEqB;;AACtC,WAAKM,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAAd,EAHiB,CAGa;AAC9B,KAVqC;;AAAA,SAatCO,QAbsC,GAa1BL,CAAD,IAAO,KAAKI,QAAL,CAAc;AAAE,OAACJ,CAAC,CAACM,MAAF,CAASC,IAAV,GAAiBP,CAAC,CAACM,MAAF,CAASE;AAA5B,KAAd,CAboB;AAAA;;AActCC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAkC,MAAA,QAAQ,EAAE,KAAKX,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,IAAI,EAAC,OAFN;AAGC,MAAA,WAAW,EAAC,cAHb;AAIC,MAAA,KAAK,EAAE;AAAEY,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,OAAO,EAAE;AAAvB,OAJR;AAKC,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,KALnB,CAMC;AAND;AAOC,MAAA,QAAQ,EAAE,KAAKO,QAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAUC;AACC,MAAA,IAAI,EAAC,QADN;AAEC,MAAA,KAAK,EAAC,QAFP;AAGC,MAAA,SAAS,EAAC,KAHX;AAIC,MAAA,KAAK,EAAE;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVD,CADD;AAmBA;;AAlCqC;AAqCvCf,OAAO,CAACiB,SAAR,GAAoB;AACnBV,EAAAA,OAAO,EAAER,SAAS,CAACmB,IAAV,CAAeC,UADL;AAEnBC,EAAAA,YAAY,EAAErB,SAAS,CAACmB,IAAV,CAAeC,UAFV;AAGnBE,EAAAA,OAAO,EAAEtB,SAAS,CAACmB,IAAV,CAAeC;AAHL,CAApB;AAMA,eAAenB,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddTodo extends Component {\r\n\tstate = {\r\n\t\t//this is a component state\r\n\t\ttitle: '',\r\n\t};\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault(); //prevent reload of page\r\n\t\tthis.props.addTodo(this.state.title); //send input up to app\r\n\t\tthis.setState({ title: '' }); //reset state for next input\r\n\t};\r\n\r\n\t//dynamic, so long as the target element's name is same as key of state, can update\r\n\tonChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form style={{ display: 'flex' }} onSubmit={this.onSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\tplaceholder=\"Add Todo ...\"\r\n\t\t\t\t\tstyle={{ flex: '10', padding: '5px' }}\r\n\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\t//onchange update state\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t></input>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvalue=\"Submit\"\r\n\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\tstyle={{ flex: '1' }}\r\n\t\t\t\t></input>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAddTodo.propTypes = {\r\n\taddTodo: PropTypes.func.isRequired,\r\n\tmarkComplete: PropTypes.func.isRequired,\r\n\tdelTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTodo;\r\n"]},"metadata":{},"sourceType":"module"}